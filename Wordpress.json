{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS Cloud Formation Template to startup a Wordpress Site",

  "Parameters" : {
    "SnapToRestore" : {
      "Type" : "String",
      "Default" : "",
      "Description" : "snap id to restore"
    },
    "EnvironmentSize": {
      "Description" : "Size of Wordpress Site",
      "Type" : "String",
      "Default" : "Small",
      "AllowedValues" : ["Small", "Medium", "Large"],
      "ConstraintDescription" : "Size of Environment"
		},
    "KeyPair": {
      "Description" : "Amazon EC2 Key Pair",
      "Type" : "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },
    "KMSKey": {
      "Description" : "Amazon KMS Encryption Key",
      "Type" : "String",
      "ConstraintDescription" : "must be the name of an existing KMS Key."
    },
    "DestinationBucketName": {
      "Description" : "Destination of the S3 Bucket Logs",
      "Type" : "String",
      "ConstraintDescription" : "must be the name of an existing S3 Bucket."
    },
    "LogFilePrefix": {
      "Description" : "Prefix for the S3 Bucket Logs",
      "Type" : "String",
      "ConstraintDescription" : "Name of log file prefix"
    },
    "DatabaseName" : {
      "Description" : "The WordPress database name",
      "Type" : "String",
      "MinLength" : "1",
      "MaxLength" : "64",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },
    "DatabaseUser" : {
      "Description" : "The WordPress database admin account username",
      "Type" : "String",
      "MinLength" : "1",
      "MaxLength" : "16",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },
    "DatabasePassword" : {
      "Description" : "The WordPress database admin account password",
      "Type" : "String",
      "MinLength" : "8",
			"MaxLength" : "41",
			"NoEcho" : "true",
			"AllowedPattern" : "[a-zA-Z0-9]*",
      "ConstraintDescription" : "must contain only alphanumeric characters."
    },
    "MultiAZDatabase": {
      "Default": "false",
      "Description" : "Create a Multi-AZ MySQL Amazon RDS database instance",
      "Type": "String",
      "AllowedValues" : [ "true", "false" ],
      "ConstraintDescription" : "must be either true or false."
    }
  },
  "Conditions" : {
		"isRestore" : {"Fn::Not" : [{"Fn::Equals" : [{"Ref" : "SnapToRestore"}, ""]}]}
	},

  "Mappings" : {
    "RegionMap": {
			"us-east-1": {
				"AMALINUX": "ami-c481fad3"
			},
			"us-east-2": {
				"AMALINUX": "ami-71ca9114"
			},
			"us-west-1": {
				"AMALINUX": "ami-de347abe"
			},
			"us-west-2": {
				"AMALINUX": "ami-b04e92d0"
			}
		},
		"InstanceSize": {
			"Small": {
				"EC2": "t2.micro",
				"DB": "db.t2.micro"
			},
			"Medium": {
				"EC2": "t2.small",
				"DB": "db.t2.small"
			},
			"Large": {
				"EC2": "t2.medium",
				"DB": "db.t2.medium"
			}
		}
  },

  "Resources" : {
    "DB" : {
        "Type" : "AWS::RDS::DBInstance",
        "DeletionPolicy" : "Delete",
        "Properties" : {
          "AllocatedStorage" : "20",
          "AllowMajorVersionUpgrade" : true,
          "AutoMinorVersionUpgrade" : true,
          "CopyTagsToSnapshot" : true,
          "DBInstanceClass" : {"Fn::FindInMap" : ["InstanceSize", {"Ref" : "EnvironmentSize"}, "DB"]},
          "DBInstanceIdentifier" : {"Ref" : "DatabaseName"},
          "DBName": {"Fn::If" : ["isRestore", {"Ref" : "AWS::NoValue"}, {"Ref" : "DatabaseName"}]},
          "Engine" : "MySQL",
          "MultiAZ" : { "Ref": "MultiAZDatabase"},
          "MasterUsername": {"Fn::If" : ["isRestore", {"Ref" : "AWS::NoValue"}, {"Ref" : "DatabaseUser"}]},
          "MasterUserPassword": {"Fn::If" : ["isRestore", {"Ref" : "AWS::NoValue"}, {"Ref" : "DatabasePassword"}]},
          "DBSnapshotIdentifier" : {"Fn::If" : ["isRestore", {"Ref" : "SnapToRestore"}, {"Ref" : "AWS::NoValue"}]},
          "PubliclyAccessible" : false,
          "StorageType" : "gp2"
        }
    },
    "EC2" : {
      "Type" : "AWS::EC2::Instance",
      "DeletionPolicy" : "Delete",
      "Properties" : {
          "ImageId" : {"Fn::FindInMap" : ["RegionMap", {"Ref" : "AWS::Region"}, "AMALINUX"]},
          "InstanceType" : {"Fn::FindInMap" : ["InstanceSize", {"Ref" : "EnvironmentSize"}, "EC2"]},
          "KeyName" : {"Ref" : "KeyPair"},
          "UserData" : {"Fn::Base64" : {"Fn::Join" : ["", [
  						"#!/bin/bash", "\n",
              "yum update -y aws-cfn-bootstrap", "\n",

  						"/opt/aws/bin/cfn-init -v",
  						" --stack ", {"Ref" : "AWS::StackName"},
  						" --resource EC2",
  						" --configsets wordpress",
  						" --region ", {"Ref" : "AWS::Region"}, "\n",

              "yum update -y", "\n",

              "/opt/aws/bin/cfn-signal -e $?",
              " --stack ", {"Ref" : "AWS::StackName"},
              " --resource EC2",
              " --region ", {"Ref" : "AWS::Region"}, "\n"
  				]]}}
        },
      "CreationPolicy" : {
        "ResourceSignal" : {
          "Count" : "1",
          "Timeout" : "PT15M"
          }
        },
        "Metadata" : {
  				"AWS::CloudFormation::Init" : {
  					"configSets" : {
  						"wordpress" : ["configure_cfn", "install_wordpress", "config_wordpress"]
  					},
  					"configure_cfn" : {
  						"files" : {
  							"/etc/cfn/hooks.d/cfn-auto-reloader.conf" : {
  								"content" : {"Fn::Join" : ["", [
  									"[cfn-auto-reloader-hook]\n",
  									"triggers=post.update\n",
  									"path=Resources.EC2.Metadata.AWS::CloudFormation::Init\n",
  									"action=/opt/aws/bin/cfn-init -v",
  									" --stack ", {"Ref" : "AWS::StackName"},
  									" --resource EC2",
  									" --configsets wordpress",
  									" --region ", {"Ref" : "AWS::Region"}, "\n"
  								]]},
  								"mode" : "000400",
  								"owner" : "root",
  								"group" : "root"
  							},
  							"/etc/cfn/cfn-hup.conf" : {
  								"content" : {"Fn::Join" : ["",[
  									"[main]\n",
  									"stack=", {"Ref" : "AWS::StackId"}, "\n",
  									"region=", {"Ref" : "AWS::Region"}, "\n",
  									"verbose=true\n",
  									"interval=5\n"
  								]]},
  								"mode" : "000400",
  								"owner" : "root",
  								"group" : "root"
  							}
  						},
  						"services" : {
  							"sysvinit" : {
  								"cfn-hup" : {
  									"enabled" : "true",
  									"ensureRunning" : "true",
  									"files" : ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"]
  								}
  							}
  						}
  					},
  					"install_wordpress" : {
  						"packages" : {
  							"yum" : {
  								"httpd" : [],
  								"php" : [],
  								"mysql" : [],
  								"php-mysql" : []
  							}
  						},
  						"sources" : {
  							"/var/www/html" : "http://wordpress.org/latest.tar.gz"
  						},
  						"services" : {
  							"sysvinit" : {
  								"httpd" : {
  									"enabled" : "true",
  									"ensureRunning" : "true"
  								}
  							}
  						}
  					},
  					"config_wordpress" : {
  						"commands" : {
  							"01_clone_config" : {
  								"cwd" : "/var/www/html/wordpress",
  								"test" : "test ! -e /var/www/html/wordpress/wp-config.php",
  								"command" : "cp wp-config-sample.php wp-config.php"
  							},
  							"02_inject_dbhost" : {
  								"cwd" : "/var/www/html/wordpress",
  								"command" : {"Fn::Join" : ["", [
  									"sed -i 's/localhost/",
  									{"Fn::GetAtt" : ["DB", "Endpoint.Address"]},
  									"/g' wp-config.php"
  								]]}
  							},
  							"03_inject_dbname" : {
  								"cwd" : "/var/www/html/wordpress",
  								"command" : {"Fn::Join" : ["", [
  									"sed -i 's/database_name_here/",
  									{"Ref" : "DatabaseName"},
  									"/g' wp-config.php"
  								]]}
  							},
  							"04_inject_dbuser" : {
  								"cwd" : "/var/www/html/wordpress",
  								"command" : {"Fn::Join" : ["", [
  									"sed -i 's/username_here/",
  									{"Ref" : "DatabaseUser"},
  									"/g' wp-config.php"
  								]]}
  							},
  							"05_inject_dbpassword" : {
  								"cwd" : "/var/www/html/wordpress",
  								"command" : {"Fn::Join" : ["", [
  									"sed -i 's/password_here/",
  									{"Ref" : "DatabasePassword"},
  									"/g' wp-config.php"
  								]]}
  							}
  						}
  					}
  				}
  			}
    },
    "S3" : {
        "Type" : "AWS::S3::Bucket",
        "DeletionPolicy" : "Delete",
        "Properties" : {
          "LoggingConfiguration" : {
            "DestinationBucketName" : {"Ref" : "DestinationBucketName"},
            "LogFilePrefix" : {"Ref" : "LogFilePrefix"}
          },
          "VersioningConfiguration" : {
            "Status" : "Enabled"
          },
          "BucketEncryption" : {
            "ServerSideEncryptionConfiguration" : [{
              "ServerSideEncryptionByDefault" : {
                "KMSMasterKeyID" : {"Ref" : "KMSKey"},
                "SSEAlgorithm" : "aws:kms"
                }
              }]
            }
          }
        }
      },

  "Outputs" : {
    "wproot" : {
      "Description" : "Access URL for wordpress",
      "Value" : {"Fn::Join" : ["",["http://", {"Fn::GetAtt" : ["EC2", "PublicIp"]}, "/wordpress"]]}
    },
    "wpadmin" : {
      "Description" : "Admin Login URL - if restoring from snap, ALWAYS use this URL first",
      "Value" : {"Fn::Join" : ["",["http://", {"Fn::GetAtt" : ["EC2", "PublicIp"]}, "/wordpress/wp-login.php"]]}
    }
  }
}
